service: adote-me-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  profile: adoteme
  region: us-east-1
  useDotenv: true
  # environment:
  #   AWS_COGNITO_CLIENT_ID: ${env:AWS_COGNITO_CLIENT_ID}
  #   AWS_COGNITO_USER_POOL_ID: ${env:AWS_COGNITO_USER_POOL_ID}

functions:
  createUser:
    handler: src/user/signup-user.signUp
    events:
      - http:
          path: create-user
          method: post
  confirmUser:
    handler: src/user/confirm-signup-user.confirmSignUp
    events:
      - http:
          path: confirm-sign-up-user
          method: post
  resendConfirmationCodeUser:
    handler: src/user/resend-confirm-code-user.resendConfirmationCode
    events:
      - http:
          path: resend-confirmation-code-user
          method: post
  signInUser:
    handler: src/user/signin-user.signIn
    events:
      - http:
          path: sign-in-user
          method: post
  logout:
    handler: src/user/logout-user.logout
    events:
      - http:
          path: logout
          method: post
  forgotPasswordUser:
    handler: src/user/forgot-password-user.forgotPassword
    events:
      - http:
          path: forgot-password-user
          method: post
  confirmForgotPasswordUser:
    handler: src/user/confirm-forgot-password-user.confirmForgotPassword
    events:
      - http:
          path: confirm-forgot-password-user
          method: post
  verifyEmailUser:
    handler: src/user/verify-email-user.checkEmail
    events:
      - http:
          path: verify-email-user
          method: post
  addNewPet:
    handler: src/pet/add-new-pet.createPet
    events:
      - http:
          path: add-new-pet
          method: post
  listPets:
    handler: src/pet/get-pets.listPets
    events:
      - http:
          path: get-pets
          method: post

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  # serverless offline plugin setup
  serverless-offline:
    httpPort: 4000

package:
  individually: true
